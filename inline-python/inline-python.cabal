Cabal-Version:  3.0
Build-Type:     Simple

Name:           inline-python
Version:        0.2
Synopsis:       Python interpreter embedded into haskell.
Description:
  This package embeds python interpreter into haskell program and
  allows to write python snippets as quasiquotes. Values could be
  easily transferred between python and haskell. It's possible to
  call haskell from python as well.

License:        BSD-3-Clause
License-File:   LICENSE
Author:         Aleksey Khudyakov <alexey.skladnoy@gmail.com>
Maintainer:     Aleksey Khudyakov <alexey.skladnoy@gmail.com>
Homepage:       https://github.com/Shimuuar/inline-python
Bug-reports:    https://github.com/Shimuuar/inline-python/issues
Category:       FFI
extra-doc-files:
  ChangeLog.md
extra-source-files:
  include/inline-python.h
  py/bound-vars.py

source-repository head
  type:     git
  location: http://github.com/Shimuuar/inline-python

common language
  Ghc-options:          -Wall
  Default-Language:     GHC2021
  Default-Extensions:
    NoPolyKinds
    --
    DeriveAnyClass
    DerivingVia
    PatternSynonyms
    ViewPatterns
    LambdaCase
    MultiWayIf
    --
    NoFieldSelectors
    DuplicateRecordFields
    OverloadedRecordDot

----------------------------------------------------------------
Library
  import:            language
  Build-Depends:     base             >=4.14 && <5
                   , primitive        >=0.6.2
                   , vector           >=0.13.2
                   , containers       >=0.5
                   , process
                   , transformers     >=0.4
                   , inline-c         >=0.9.1
                   , stm              >=2.4
                   , template-haskell -any
                   , text             >=2
                   , bytestring       >=0.11.2
                   , exceptions       >=0.10
                   , vector           >=0.13
  hs-source-dirs:    src
  include-dirs:      include
  c-sources:         cbits/python.c
  cc-options:        -g -Wall
  pkgconfig-depends: python3-embed
  --
  Exposed-modules:
    Python.Inline
    Python.Inline.Literal
    Python.Inline.QQ
    Python.Inline.Eval
    Python.Inline.Types
  Other-modules:
    Python.Internal.CAPI
    Python.Internal.Eval
    Python.Internal.EvalQQ
    Python.Internal.Program
    Python.Internal.Types
    Python.Internal.Util
